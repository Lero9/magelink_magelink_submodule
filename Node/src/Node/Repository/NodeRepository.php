<?php
/**
 * NodeRepository
 * This class was initially generated by the Doctrine ORM and customised afterwards.

 * @package Node\Repository
 * @author Sean Yao
 * @author Andreas Gerhards <andreas@lero9.co.nz>
 * @copyright Copyright (c) 2014 LERO9 Ltd.
 * @license http://opensource.org/licenses/BSD-3-Clause BSD-3-Clause - Please view LICENSE.md for more information
 */

namespace Node\Repository;

use Doctrine\ORM\EntityRepository;


class NodeRepository extends EntityRepository
{

    /**
     * @return array $activeNodes
     */
    public function getActiveNodes()
    {
        $dql = "SELECT n FROM \Node\Entity\Node n ";

        return $this->getEntityManager()
            ->createQuery($dql)
            ->getResult();
    }

    /**
     * @param $typeString
     * @return array $activeNodes
     */
    public function getActiveNodesByType($typeString)
    {
        $dql = "SELECT n FROM \Node\Entity\Node n WHERE n.type = :type";

        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('type', $typeString)
            ->getResult();
    }

    /**
     * Get one Accredo node
     * @return Node\Entity\Node $accredoNode
     */
    public function getOneAccredoNode()
    {
        $dql = "SELECT n FROM \Node\Entity\Node n WHERE n.type = :type";

        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('type', 'accredo')
            ->setMaxResults(1)
            ->getOneOrNullResult();
    }

    /**
     * Get one HOPS node
     * @return Node\Entity\Node $hopsNode
     */
    public function getOneHOPSNode()
    {
        $dql = "SELECT n FROM \Node\Entity\Node n WHERE n.type = :type";

        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('type', 'HOPS')
            ->setMaxResults(1)
            ->getOneOrNullResult();
    }

    /**
     * Get one Magento node
     * @return Node\Entity\Node $magentoNode
     */
    public function getOneMagentoNode()
    {
        $dql = "SELECT n FROM \Node\Entity\Node n WHERE n.type = :type";

        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('type', 'magento')
            ->setMaxResults(1)
            ->getOneOrNullResult();
    }

    /**
     * Get one Mms node
     * @return Node\Entity\Node $mmsNode
     */
    public function getOneMmsNode()
    {
        $dql = "SELECT n FROM \Node\Entity\Node n WHERE n.type = :type";

        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('type', 'mms')
            ->setMaxResults(1)
            ->getOneOrNullResult();
    }

}
